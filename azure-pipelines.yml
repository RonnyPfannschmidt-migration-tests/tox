name: $(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.rr)

variables:
  "System.PreferGit": true

trigger:
  batch: true
  branches:
    include:
    - master
    - refs/tags/*
  paths:
    exclude:
    - readthedocs.yml
    - LICENSE
    - HOWTORELEASE.rst
    - CONTRIBUTORS
    - CONTRIBUTING.rst
    - CODE_OF_CONDUCT.md
    - .travis.yml
    - .gitignore
    - .github/*
    - tasks/*

jobs:
- template: azure-run-tox-env.yml
  parameters: {name: check_code_style, tox: "fix-lint", python: '3.7',  image: 'Ubuntu 16.04'}
- template: azure-run-tox-env.yml
  parameters: {name: generate_docs, tox: docs, python: '3.7', image: 'Ubuntu 16.04'}
- template: azure-run-tox-env.yml
  parameters: {name: check_package_long_description, tox: "package-description", python: '3.7',  image: 'Ubuntu 16.04'}

- template: azure-run-tox-env.yml
  parameters: {name: windows_37, python: '3.7',  image: 'vs2017-win2016'}
- template: azure-run-tox-env.yml
  parameters: {name: windows_36, python: '3.6',  image: 'vs2017-win2016'}
- template: azure-run-tox-env.yml
  parameters: {name: windows_35, python: '3.5',  image: 'vs2017-win2016'}
- template: azure-run-tox-env.yml
  parameters: {name: windows_34, python: '3.4',  image: 'vs2017-win2016'}
- template: azure-run-tox-env.yml
  parameters: {name: windows_27, python: '2.7',  image: 'vs2017-win2016'}

- template: azure-run-tox-env.yml
  parameters: {name: linux_37, python: '3.7',  image: 'Ubuntu 16.04'}
- template: azure-run-tox-env.yml
  parameters: {name: linux_36, python: '3.6',  image: 'Ubuntu 16.04'}
- template: azure-run-tox-env.yml
  parameters: {name: linux_35, python: '3.5',  image: 'Ubuntu 16.04'}
- template: azure-run-tox-env.yml
  parameters: {name: linux_34, python: '3.4',  image: 'Ubuntu 16.04'}
- template: azure-run-tox-env.yml
  parameters: {name: linux_27, python: '2.7',  image: 'Ubuntu 16.04'}

- template: azure-run-tox-env.yml
  parameters: {name: macOS_36, python: '3.6',  image: 'macOS 10.13'}

- job: tests_done
  pool: {vmImage: 'Ubuntu 16.04'}
  condition: always()
  dependsOn:
  - windows_37
  - windows_36
  - windows_35
  - windows_34
  - windows_27
  - linux_37
  - linux_36
  - linux_35
  - linux_34
  - linux_27
  - macOS_36
  steps:
  - script: echo "done"
    displayName: running tests done

- job: publish
  dependsOn:
  - tests_done
  - check_code_style
  - generate_docs
  - check_package_long_description
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  pool: {vmImage: 'Ubuntu 16.04'}
  steps:
  - task: UsePythonVersion@0
    displayName: setup python3.7
    inputs: {versionSpec: '3.7'}
  - task: PyPIPublisher@0
    displayName: Package and publish to PyPI
    inputs:
      pypiConnection: pypi-conn
      packageDirectory: '$(System.DefaultWorkingDirectory)'
      alsoPublishWheel: true
