[tox]
envlist =
    fix
    flake8
    py39
    py38
    py37
    py36
    cov
    type
    docs
    pkg_meta
isolated_build = true
skip_missing_interpreters = true
minversion = 3.21

[testenv]
description = run the tests with pytest
package = wheel
wheel_build_env = .pkg
passenv =
    PYTEST_*
    SSL_CERT_FILE
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}{/}.coverage.{envname}}
    COVERAGE_PROCESS_START = {toxinidir}{/}setup.cfg
extras =
    testing
commands =
    pytest {tty:--color=yes} {posargs: \
      --junitxml {toxworkdir}{/}junit.{envname}.xml --cov {envsitepackagesdir}{/}tox --cov {toxinidir}{/}tests \
      --cov-config=setup.cfg --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-report html:{envtmpdir}{/}htmlcov \
      --cov-report xml:{toxworkdir}{/}coverage.{envname}.xml \
      -n={env:PYTEST_XDIST_PROC_NR:auto} \
      tests --timeout 25 --durations 5 --run-integration}

[testenv:fix]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
passenv =
    {[testenv]passenv}
    PROGRAMDATA
basepython = python3.9
skip_install = true
deps =
    pre-commit>=2.2
commands =
    pre-commit run --all-files --show-diff-on-failure {tty:--color=always} {posargs}
    python -c 'print(r"hint: run {envbindir}{/}pre-commit install to add checks as pre-commit hook")'

[testenv:type]
description = run type check on code base
setenv = {tty:MYPY_FORCE_COLOR = 1}
deps =
    mypy==0.800
commands =
    mypy src/tox
    mypy tests

[testenv:flake8]
skip_install = true
description = run style checker on the code
deps =
    flake8 == 3.8.4
    flake8-bugbear == 20.11.1
    flake8-unused-arguments == 0.0.6
    flake8-comprehensions == 3.3.1
    flake8-spellcheck == 0.23.0
    flake8-pytest-style == 1.3.0
commands =
    flake8 src tests docs

[testenv:cov]
description = merge existing coverage reports and report coverage diff against DIFF_MASTER env-var (default upstream/rewrite)
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
skip_install = true
deps =
    coverage>=5
    covdefaults>=1.2
    diff_cover>=4
parallel_show_output = true
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}{/}coverage.xml
    coverage html -d {toxworkdir}{/}htmlcov
    diff-cover --compare-branch upstream/rewrite {toxworkdir}{/}coverage.xml
depends =
    py39
    py38
    py37
    py36

[testenv:docs]
description = build documentation
basepython = python3.9
extras =
    docs
commands =
    sphinx-build -d "{envtmpdir}{/}doctree" docs "{toxworkdir}{/}docs_out" --color -b html {posargs}
    python -c 'print(r"documentation available under file://{toxworkdir}{/}docs_out{/}index.html")'

[testenv:pkg_meta]
description = check that the long description is valid
basepython = python3.9
skip_install = true
deps =
    build>=0.0.4
    twine>=3
commands =
    python -m build -o {envtmpdir} -s -w .
    twine check {envtmpdir}{/}*

[testenv:dev]
description = dev environment with all deps at {envdir}
usedevelop = true
deps =
    setuptools_scm>=3
extras =
    docs
    testing
commands =
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"

[flake8]
max-complexity = 22
max-line-length = 120
ignore = E203, W503

[pep8]
max-line-length = 120
