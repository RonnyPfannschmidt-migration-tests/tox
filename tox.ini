[tox]
envlist =
    py38
    py37
    py36
    pypy3
    cov
    fix_lint
    pkg_meta
    docs
minversion = 3.14.0
skip_missing_interpreters = true
isolated_build = True

[testenv]
description = run the tests with pytest
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
    _COVERAGE_SRC = {envsitepackagesdir}/tox
passenv =
    SSL_CERT_FILE
    PYTEST_*
extras = testing
commands =
    coverage erase
    coverage run -m pytest \
    --junitxml {toxworkdir}/junit.{envname}.xml \
    tests {posargs:--timeout 30 --durations 5}

    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.{envname}.xml
    coverage html -d {envtmpdir}/htmlcov

[testenv:cov]
description = merge existing coverage reports and report coverage diff against DIFF_MASTER env-var (default origin/master)
deps =
    coverage>=5
    diff_cover>=3
skip_install = true
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/rewrite} {toxworkdir}/coverage.xml
depends =
    py38
    py37
    py36
    pypy3
parallel_show_output = True

[testenv:pkg_meta]
description = check that the long description is valid
basepython = python3.8
deps =
    twine >= 3
    pep517 >= 0.8.1
skip_install = true
commands =
    python -m pep517.build -o {envtmpdir} -s -b .
    twine check {envtmpdir}/*

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.8
passenv =
    {[testenv]passenv}
    PROGRAMDATA
deps =
    pre-commit>=2.2.0
skip_install = true
commands =
    pre-commit run --all-files --show-diff-on-failure {posargs}
    python -c 'import pathlib; print("hint: run {} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[flake8]
max-complexity = 22
max-line-length = 120
ignore = E203, W503, C901, E402, B011

[pep8]
max-line-length = 120

[pytest]
testpaths = tests
junit_family = xunit2
addopts = --tb=auto -ra --showlocals

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 99
known_first_party = tox,tests
known_third_party = _overlapped,_pytest,appdirs,colorama,filelock,packaging,pluggy,psutil,py,pytest,setuptools,sphinx_rtd_theme,toml,virtualenv,wheel

[testenv:dev]
description = dev environment with all deps at {envdir}
deps =
    setuptools_scm >= 3
extras =
    testing
    docs
usedevelop = True
commands =
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"

[testenv:docs]
basepython = python3.8
description = build documentation
extras = docs
commands =
    python -c 'import glob; import subprocess; subprocess.call(["proselint"] + glob.glob("docs/*.rst") + glob.glob("docs/**/*.rst"))'
    sphinx-build -d "{envtmpdir}/doctree" docs "{toxworkdir}/docs_out" --color -b html {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'
